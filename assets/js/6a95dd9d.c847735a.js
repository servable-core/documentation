"use strict";(self.webpackChunkservable=self.webpackChunkservable||[]).push([[7815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||s;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},69669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={sidebar_position:5},i="Triggers",o={unversionedId:"reference/protocol/triggers",id:"version-1.2/reference/protocol/triggers",title:"Triggers",description:"Concept",source:"@site/versioned_docs/version-1.2/reference/protocol/triggers.md",sourceDirName:"reference/protocol",slug:"/reference/protocol/triggers",permalink:"/docs/reference/protocol/triggers",draft:!1,editUrl:"https://github.com/servable-community/generator-servable/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.2/reference/protocol/triggers.md",tags:[],version:"1.2",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/docs/reference/protocol/configurations"},next:{title:"Engine APIs",permalink:"/docs/category/engine-apis"}},l={},c=[{value:"Concept",id:"concept",level:2},{value:"Folder structure",id:"folder-structure",level:2},{value:"Variant entry points",id:"variant-entry-points",level:2},{value:"Usage",id:"usage",level:2},{value:"Before save",id:"before-save",level:3},{value:"After save",id:"after-save",level:3},{value:"Before delete",id:"before-delete",level:3},{value:"After delete",id:"after-delete",level:3},{value:"Example",id:"example",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"triggers"},"Triggers"),(0,a.kt)("h2",{id:"concept"},"Concept"),(0,a.kt)("p",null,"Contains the ."),(0,a.kt)("h2",{id:"folder-structure"},"Folder structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500\u2500 triggers\n\u2502   \u251c\u2500\u2500 beforeSave.js\n\u2502   \u251c\u2500\u2500 afterSave.js\n\u2502   \u251c\u2500\u2500 beforeDelete.js\n\u2502   \u251c\u2500\u2500 afterDelete.js\n\u2502   \u251c\u2500\u2500 beforeFind.js\n\u2502   \u251c\u2500\u2500 afterFind.js\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"index.js")," (or ",(0,a.kt)("strong",{parentName:"li"},"triggers.js"),") exports the triggers functions ")),(0,a.kt)("h2",{id:"variant-entry-points"},"Variant entry points"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Default argument for all triggers"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,a.kt)("th",{parentName:"tr",align:"left"}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"request"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The Parse Server request"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Object"),(0,a.kt)("td",{parentName:"tr",align:"left"},"{}"),(0,a.kt)("td",{parentName:"tr",align:"left"})))),(0,a.kt)("p",null,"Request content:\n|  Argument | Description | Type | Default value |\n|:--|:--|:--|:--|:--|\n| object | The Parse Server object | Object | {} |\n| original | The Parse Server object before it's modified | Object | {} |\n| context | The Parse Server context | Object | {} |"),(0,a.kt)("h3",{id:"before-save"},"Before save"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.kt)("h3",{id:"after-save"},"After save"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.kt)("h3",{id:"before-delete"},"Before delete"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.kt)("h3",{id:"after-delete"},"After delete"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"disposablechildrenable")," protocol "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import _ from 'underscore'\n//afterSave.js\nexport default async ({ request }) => {\n    const { object, original, context } = request\n\n    if (!object || !object.disposableChildren) {\n        return\n    }\n    const { dirtyKeys } = context\n    if (!dirtyKeys || !dirtyKeys.length) {\n        return\n    }\n\n    const items = object.disposableChildren()\n    if (!items || !items.length) {\n        return\n    }\n\n    const candidates = _.intersection(items, dirtyKeys)\n    if (!candidates || !candidates.length) {\n        return\n    }\n\n    await Promise.all(candidates.map(key => handleItem({ object, original, key })))\n}\n\nconst handleItem = async ({ object, original, key }) => {\n    if (!original) {\n        return\n    }\n\n    const previous = original.get(key)\n    const current = object.get(key)\n\n    if (Array.isArray(previous) || Array.isArray(current)) {\n        return handleArray({ previous, current })\n    }\n\n    const isFile = isFieldFile(previous)\n      | isFieldFile(current)\n\n    if (!isFile) {\n        return handleItemAsObject({\n            previous,\n            current\n        })\n    }\n\n    return handleItemAsFile({\n        previous,\n        current\n    })\n\n\n}\n\nconst handleArray = async ({ previous, current }) => {\n    const objects = missingObjectsBetweenArrays(previous, current)\n    //TODO: objects === 0 when [files]\n    if (!objects || !objects.length) {\n        return\n    }\n\n    if (isFieldFile(objects[0])) {\n        await Promise.all(objects.map(destroyItemAsFile))\n    } else {\n        await Promise.all(objects.map(destroyItemAsObject))\n    }\n}\n\nconst handleItemAsObject = async ({ previous, current }) => {\n    const objects = missingObjectsBetweenArrays([previous], [current])\n    //TODO: objects === 0 when [files]\n    if (!objects || !objects.length) {\n        return\n    }\n\n    await Promise.all(objects.map(destroyItemAsObject))\n}\n\nconst handleItemAsFile = async ({ previous, current }) => {\n    if (!previous) {\n        return\n    }\n\n    if (!current) {\n        return destroyItemAsFile(previous)\n    }\n\n    if (previous.name() !== current.name()) {\n        return destroyItemAsFile(previous)\n    }\n}\n\nconst missingObjectsBetweenArrays = (a, b) => {\n    if (!b || !b.length) {\n        return a\n    }\n\n    if (!a || !a.length) {\n        return []\n    }\n\n    let _a = a.filter(i => i)\n    let _b = b.filter(i => i)\n\n    const isFile = isFieldFile(_b[0])\n    if (isFile) {\n        return missingObjectsBetweenArraysFiles(_a, _b)\n    }\n    else {\n        return missingObjectsBetweenArraysObject(_a, _b)\n    }\n}\n\nconst missingObjectsBetweenArraysFiles = (a, b) => {\n    const bUrls = b.map(i => i.url())\n\n    return a.map(i => {\n        //TODO: handle files\n        if (!bUrls.includes(i.url())) {\n            return i\n        }\n        return null\n    }).filter(a => a)\n}\n\nconst missingObjectsBetweenArraysObject = (a, b) => {\n    const bIds = b.map(i => i.id)\n\n    return a.map(i => {\n        //TODO: handle files\n        if (!bIds.includes(i.id)) {\n            return i\n        }\n        return null\n    }).filter(a => a)\n}\n\nconst isFieldFile = (item) => {\n\n    if (!item) {\n        return false\n    }\n    return (item._name && item._url)\n}\n\nconst destroyItemAsObject = async i => {\n    try {\n        i.isDataAvailable && !i.isDataAvailable() && i.fetch && (await i.fetch({ useMasterKey: true })) // The check will skip files\n        await i.destroy({ useMasterKey: true })\n    } catch (e) {\n        console.error('Protocol > dependentChildren > destroyItem', e.message)\n    }\n}\n\nconst destroyItemAsFile = async i => {\n    try {\n        await i.destroy({ useMasterKey: true })\n    } catch (e) {\n        console.error('Protocol > dependentChildren > destroyItem', e.message)\n    }\n}\n\n")))}d.isMDXComponent=!0}}]);