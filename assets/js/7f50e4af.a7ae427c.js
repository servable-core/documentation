"use strict";(self.webpackChunkservable=self.webpackChunkservable||[]).push([[9852],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,v=d["".concat(i,".").concat(m)]||d[m]||u[m]||l;return r?a.createElement(v,o(o({ref:t},p),{},{components:r})):a.createElement(v,o({ref:t},p))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<l;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},43839:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(67294),n=r(73992),l=r(18679),o=r(92053),s=r(60132);const i=e=>{const t=e.npm?e.npm:(0,s.Z)(e.yarn,"npm"),r=e.yarn?e.yarn:(0,s.Z)(e.npm,"yarn");return a.createElement(n.default,null,a.createElement(l.default,{value:"npm",label:"npm",default:!0},a.createElement(o.default,{language:"bash"},t)),a.createElement(l.default,{value:"bash",label:"yarn"},a.createElement(o.default,{language:"bash"},r)))}},36882:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905)),l=r(43839);const o={sidebar_position:1},s="Quick Start \u26a1\ufe0f",i={unversionedId:"quickstart",id:"version-1.2/quickstart",title:"Quick Start \u26a1\ufe0f",description:"This quick start will use the @servable/parse-server-engine engine.",source:"@site/versioned_docs/version-1.2/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/docs/quickstart",draft:!1,editUrl:"https://github.com/servable-community/generator-servable/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.2/quickstart.mdx",tags:[],version:"1.2",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/overview"},next:{title:"Getting started",permalink:"/docs/category/getting-started"}},c={},p=[{value:"Step 1: Install Node JS",id:"step-1-install-node-js",level:3},{value:"Step 2: Docker (for local environment)",id:"step-2-docker-for-local-environment",level:3},{value:"Step 3: Install the Servable CLI",id:"step-3-install-the-servable-cli",level:3},{value:"Step 4: Create a new Servable service",id:"step-4-create-a-new-servable-service",level:3},{value:"Step 5: Add your own model",id:"step-5-add-your-own-model",level:3},{value:"Step 6: Start the server",id:"step-6-start-the-server",level:3}],d={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"quick-start-\ufe0f"},"Quick Start \u26a1\ufe0f"),(0,n.kt)("p",null,"This quick start will use the @servable/parse-server-engine engine."),(0,n.kt)("h3",{id:"step-1-install-node-js"},"Step 1: Install ",(0,n.kt)("a",{parentName:"h3",href:"https://nodejs.org/en/download/"},"Node JS")),(0,n.kt)("p",null,"Before you install Servable, make sure to download and install Node.js (version 18.x or higher), a JavaScript runtime.\nWhen installing Node.js, you are recommended to check all checkboxes related to dependencies."),(0,n.kt)("h3",{id:"step-2-docker-for-local-environment"},"Step 2: Docker (for local environment)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker"},"Docker"),"\n\ud83d\udc49 ",(0,n.kt)("em",{parentName:"li"},"Version 20.10.0 or above")),(0,n.kt)("li",{parentName:"ul"},"Docker compose\n\ud83d\udc49 ",(0,n.kt)("em",{parentName:"li"},"Version #TODO or above"))),(0,n.kt)("p",null,"The easiest and recommended way to get Docker Compose is to install Docker Desktop. Docker Desktop includes Docker Compose along with Docker Engine and Docker CLI which are Compose prerequisites.\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"More")),(0,n.kt)("h3",{id:"step-3-install-the-servable-cli"},"Step 3: Install the Servable CLI"),(0,n.kt)("p",null,"The Servable Command Line Interface "),(0,n.kt)(l.Z,{npm:"npm install -g @servable/cli",mdxType:"BashTabs"}),(0,n.kt)("h3",{id:"step-4-create-a-new-servable-service"},"Step 4: Create a new Servable service"),(0,n.kt)("p",null,"Using the @servable/parse-server-engine:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"servable app new -q\n")),(0,n.kt)("p",null,"The Servable service has a dedicated system docker-compose for local development that will start a mongodb database, a Parse Server dashboard, a Redis cache database and a Redis Live Query server."),(0,n.kt)("h3",{id:"step-5-add-your-own-model"},"Step 5: Add your own model"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"servable model add\n")),(0,n.kt)("p",null,"Models definition are stored in the app/schema folder."),(0,n.kt)("h3",{id:"step-6-start-the-server"},"Step 6: Start the server"),(0,n.kt)(l.Z,{npm:"npm run start",mdxType:"BashTabs"}),(0,n.kt)("p",null,"At this point the local Servable docker compose has been launched and you can access"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"API endpoint")," at ",(0,n.kt)("a",{parentName:"li",href:"http://localhost:1387/servable"},"http://localhost:1387/servable")),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"Parse Server Dashboard")," at ",(0,n.kt)("a",{parentName:"li",href:"http://localhost:4080"},"http://localhost:4080")," (username: admin, password: PASSWORD_TO_CHANGE)"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},"Minio ui endpoint")," at ",(0,n.kt)("a",{parentName:"li",href:"http://localhost:9001"},"http://localhost:9001")," (username: MINIO_USERNAME_TO_CHANGE, password: MINIO_PASSWORD_TO_CHANGE)")))}m.isMDXComponent=!0}}]);