"use strict";(self.webpackChunkservable=self.webpackChunkservable||[]).push([[9221],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return a?r.createElement(h,o(o({ref:t},c),{},{components:a})):r.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},43839:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(67294),n=a(73992),l=a(18679),o=a(92053),s=a(60132);const i=e=>{const t=e.npm?e.npm:(0,s.Z)(e.yarn,"npm"),a=e.yarn?e.yarn:(0,s.Z)(e.npm,"yarn");return r.createElement(n.default,null,r.createElement(l.default,{value:"npm",label:"npm",default:!0},r.createElement(o.default,{language:"bash"},t)),r.createElement(l.default,{value:"bash",label:"yarn"},r.createElement(o.default,{language:"bash"},a)))}},3715:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=a(87462),n=(a(67294),a(3905)),l=a(43839);const o={sidebar_position:4},s="Example",i={unversionedId:"tutorials/example",id:"version-1.2/tutorials/example",title:"Example",description:"This example will walk you through the building of a fully functional servable app.",source:"@site/versioned_docs/version-1.2/tutorials/example.mdx",sourceDirName:"tutorials",slug:"/tutorials/example",permalink:"/documentation/docs/tutorials/example",draft:!1,editUrl:"https://github.com/servable-community/generator-servable/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.2/tutorials/example.mdx",tags:[],version:"1.2",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"1.",permalink:"/documentation/docs/tutorials/parseserverapp/1"},next:{title:"Reference",permalink:"/documentation/docs/category/reference"}},p={},c=[{value:"1. Install the generator",id:"1-install-the-generator",level:2},{value:"2. Generate a new server",id:"2-generate-a-new-server",level:2},{value:"3. Start your server",id:"3-start-your-server",level:2},{value:"4. Add a class",id:"4-add-a-class",level:2},{value:"5. Add protocols",id:"5-add-protocols",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"example"},"Example"),(0,n.kt)("p",null,"This example will walk you through the building of a fully functional servable app.\nThe source code is available at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/servable-community/sample"},"https://github.com/servable-community/sample")),(0,n.kt)("p",null,"We want to build a Servable service that:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"#TODO")),(0,n.kt)("h2",{id:"1-install-the-generator"},"1. Install the generator"),(0,n.kt)(l.Z,{npm:"npm install -g generator-servable",mdxType:"BashTabs"}),(0,n.kt)("h2",{id:"2-generate-a-new-server"},"2. Generate a new server"),(0,n.kt)("p",null,"Generate a new servable app by running the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir myapp\ncd myapp\nyo servable -q -t app -n "MyApp"\n')),(0,n.kt)("p",null,"You can type this command into Command Prompt, Powershell, Terminal, or any other integrated terminal of your code editor."),(0,n.kt)("p",null,"You will be prompted to enter the basic informations needed to start a full-fledged servable app."),(0,n.kt)("p",null,"The command also installs all necessary dependencies you need to run servable."),(0,n.kt)("h2",{id:"3-start-your-server"},"3. Start your server"),(0,n.kt)("p",null,"Run the development server:"),(0,n.kt)(l.Z,{yarn:"yarn start",mdxType:"BashTabs"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"cd")," command changes the directory you're working with. In order to work with your newly created servable-parse app, you'll need to navigate the terminal there."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"yarn start")," command builds your app locally and serves it through a development server, ready for you to view at http://localhost:1391/."),(0,n.kt)("p",null,"You can now open the Servable dashboard at ",(0,n.kt)("a",{parentName:"p",href:"http://localhost:4040"},"http://localhost:4040")," and view your application data."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Note that contrarily to Parse Server Dashboard, Servable Dashboard does not permit class creation and modification via the UI.\nThis is to enforce the unique ability of Servable to predict schema and handle migrations automatically, thus avoiding environment discrepancies.\nThe sole source of truth is the protocols designated schema files.")),(0,n.kt)("h2",{id:"4-add-a-class"},"4. Add a class"),(0,n.kt)("p",null,"At this point the app is fully functional but lacks any high level behavior.\nBy default a Servable service contains the following models: ",(0,n.kt)("em",{parentName:"p"},"_User, _Session, _Installation, ServableApp"),"\nAdd a custom class:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'yo servable -q -t class -n "BlogPost"\n')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"You can add class manually by adding a class payload to the app/schema/1.0.0/index.json")),(0,n.kt)("p",null,"Restart the app to reflect the changes:"),(0,n.kt)(l.Z,{yarn:"yarn stop \nyarn start",mdxType:"BashTabs"}),(0,n.kt)("h2",{id:"5-add-protocols"},"5. Add protocols"),(0,n.kt)("p",null,"We want to make:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The app (thus servableApp class) able to send notifications and emails, have a reference for countries, locales and currency ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yo servable -q -t communityprotocol --useAppProtocol --targetClassName ServableApp --protocol notifiable\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The user (thus _User class) be followable, slugable, avatarable, localable, countryable")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yo servable -q -t communityprotocol --useAppProtocol --targetClassName _User --protocol notifiable\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A blog post (thus BlogPost class) to be commentable, reviewable, publishable, localable, countryable, slugable\nWe want to Add a community protocol to the ServableApp to give it ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yo servable -q -t communityprotocol --useAppProtocol --targetClassName BlogPost --protocol notifiable\n")),(0,n.kt)("p",null,"At this point the app is useful for blogging."),(0,n.kt)("p",null,"Restart the app to reflect the changes:"),(0,n.kt)(l.Z,{yarn:"yarn stop \nyarn start",mdxType:"BashTabs"}),(0,n.kt)("h1",{id:"uninstall"},"Uninstall"),(0,n.kt)(l.Z,{npm:"npm uninstall -g generator-servable",mdxType:"BashTabs"}))}m.isMDXComponent=!0}}]);