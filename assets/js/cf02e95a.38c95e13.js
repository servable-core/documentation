"use strict";(self.webpackChunkservable=self.webpackChunkservable||[]).push([[9591],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>f});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function p(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?p(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},p=Object.keys(e);for(t=0;t<p.length;t++)n=p[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)n=p[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),i=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},c=function(e){var r=i(e.components);return t.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||p;return n?t.createElement(f,o(o({ref:r},c),{},{components:n})):t.createElement(f,o({ref:r},c))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=m;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var i=2;i<p;i++)o[i]=n[i];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},31200:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>p,metadata:()=>l,toc:()=>i});var t=n(87462),a=(n(67294),n(3905));const p={sidebar_position:2},o="$ servable app",l={unversionedId:"reference/commands/app",id:"reference/commands/app",title:"$ servable app",description:"Create a new app",source:"@site/docs/reference/commands/app.mdx",sourceDirName:"reference/commands",slug:"/reference/commands/app",permalink:"/docs/next/reference/commands/app",draft:!1,editUrl:"https://github.com/servable-community/generator-servable/tree/main/packages/create-docusaurus/templates/shared/docs/reference/commands/app.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"$ servable auth",permalink:"/docs/next/reference/commands/auth"},next:{title:"Packages",permalink:"/docs/next/reference/packages"}},s={},i=[{value:"Create a new app",id:"create-a-new-app",level:2},{value:"Options",id:"options",level:3},{value:"Example",id:"example",level:3},{value:"Help",id:"help",level:3}],c={toc:i},u="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(u,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-servable-app"},"$ servable app"),(0,a.kt)("h2",{id:"create-a-new-app"},"Create a new app"),(0,a.kt)("p",null,"Creates a new servable app and installs dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"servable app new\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  -n, --appName              App name                                                      [string] [default: "MyAppName"]\n      --appDescription       App description                                          [string] [default: "A Servable service"]\n      --bridgeframeworkId    Engine to use                  [string] [default: "@servable/parse-server-engine"]\n  -i, --installDependencies  Install dependencies                                                [boolean] [default: true]\n  -l, --license              License                                                             [string] [default: "MIT"]\n  -p, --packageManager       Package manager (\'npm\', \'yarn\' or \'pnpm\')                           [string] [default: "npm"]\n  -g, --gitInit              Initialize a git repository                                         [boolean] [default: true]\n  -d, --destination          Choose a destination                                                                 [string]\n      --appPort              App port                                                             [number] [default: 1387]  \n')),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"servable app new --appName='MyApp' --adapter='@servable/cli'\n")),(0,a.kt)("h3",{id:"help"},"Help"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"servable app -h\n")))}d.isMDXComponent=!0}}]);