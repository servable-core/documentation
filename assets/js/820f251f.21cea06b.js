"use strict";(self.webpackChunkservable=self.webpackChunkservable||[]).push([[8402],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return t?a.createElement(m,l(l({ref:n},c),{},{components:t})):a.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1905:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>b,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:1},l="Use a protocol",s={unversionedId:"guides/use",id:"guides/use",title:"Use a protocol",description:"A protocol applies to a class.",source:"@site/docs/guides/use.mdx",sourceDirName:"guides",slug:"/guides/use",permalink:"/docs/next/guides/use",draft:!1,editUrl:"https://github.com/servable-community/generator-servable/tree/main/packages/create-docusaurus/templates/shared/docs/guides/use.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/next/guides/overview"},next:{title:"Routes",permalink:"/docs/next/category/routes"}},i={},p=[{value:"Simple declaration",id:"simple-declaration",level:2},{value:"Use a specific protocol or version",id:"use-a-specific-protocol-or-version",level:2},{value:"API",id:"api",level:2}],c={toc:p},u="wrapper";function b(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-a-protocol"},"Use a protocol"),(0,r.kt)("p",null,"A protocol applies to a class.\nYou can add a protocol to the static protocols array."),(0,r.kt)("h2",{id:"simple-declaration"},"Simple declaration"),(0,r.kt)("p",null,"Use the protocol's id in the array of protocols:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export default [\n    'localable',\n    'countryable',\n    'taggable',\n    'slugable',\n    'usersinable',\n    'reviewable',\n    'versionable',\n    'printable',\n    'commentable',\n    'reactable',\n    'rolehostable',\n    'searchable',\n    'currencyable',\n    'bankaccountable',\n    'walletable',\n    'publishable',\n    'disposableorphansable',\n    'disposablechildrenable',\n    'notificationtargetable',\n    'savable',\n    'sharable',\n    'pageable',\n    'followable'\n]\n")),(0,r.kt)("h2",{id:"use-a-specific-protocol-or-version"},"Use a specific protocol or version"),(0,r.kt)("p",null,"Let's say we want to use the apptunnelable protocol to our ServableApp class.\napptunnelable makes it possible to tunnel all the api calls to the current server via NGROK.\nIt is possible to give a struct with the id of the protocol and the module added to the project (npm).\nYou can also give configuration options to the protocol via the params object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export default class ServableApp extends Servable.App.Object {\n    static protocols = [\n        {\n            id: 'apptunnelable',\n            module: {\n                '@servable-community/apptunnelable-parse-server': '*'\n            },\n            params: {\n                tunnelUrl: process.env.SERVABLE_EXTERNAL_TUNNEL,\n                serverPort: process.env.SERVER_PORT,\n                ngrokAuthToken: process.env.NGROK_AUTH_TOKEN\n            }\n        },\n        'appagentable',\n        'localable',\n        'countryable',\n        'taggable',\n        'slugable',\n        'usersinable',\n        'reviewable',\n        'versionable',\n        'printable',\n        'commentable',\n        'reactable',\n        'rolehostable',\n        'searchable',\n        'currencyable',\n        'disposableorphansable',\n        'disposablechildrenable',\n        'notificationtargetable',\n        'savable',\n        'sharable',\n        {\n            id: 'publishable',\n            name: 'publishable',\n            slug: 'ps',\n            module: {\n                '@servable-community/publishable-parse-server': '*'\n            },\n            version: '*',\n            params: {\n                liveModels: ['publishable'],\n                schema: {\n                    restrictSecurity: true\n                }\n            }\n        },\n        {\n            id: 'pageable',\n            name: 'pageable',\n            slug: 'pg',\n            params: {}\n        },\n        'followable',\n        {\n            id: 'emailable',\n            name: 'emailable',\n            slug: 'em',\n            params: {\n                apiKey: process.env.EMAIL_API_KEY,\n                frontWebUrl: process.env.FRONT_WEB_URI,\n                env: process.env.NODE_ENV,\n                appName: process.env.PARSE_SERVER_APP_NAME,\n                restrictSend: process.env.EMAIL_RESTRICT_SEND,\n                restrictTo: process.env.EMAIL_RESTRICT_SEND_TO,\n                restrictToRegex: process.env.EMAIL_RESTRICT_SEND_TO_REGEX,\n                schema: {\n                    exclude: false\n                }\n            }\n        },        \n        {\n            id: 'videobunnyable',\n            name: 'videobunnyable',\n            slug: 'vb',\n            params: {\n                apiKey: process.env.VIDEO_BUNNY_API_KEY,\n                appName: process.env.PARSE_SERVER_APP_NAME\n            }\n        },\n        'faqable',        \n        'userproxyable',\n        'addressable',\n        'addresssocialable',\n        'userrequestable',\n    ]\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"id: the unique id for the protocol"),(0,r.kt)("li",{parentName:"ul"},"name: the name of the protocol"),(0,r.kt)("li",{parentName:"ul"},"slug: experimental: the slug that will be used by the protocol instead of the full name"),(0,r.kt)("li",{parentName:"ul"},"params: an object containing configuration parameters that will be passed to the protocol during execution"),(0,r.kt)("li",{parentName:"ul"},"module: an object containing the dependency used for this protocol, along with a specific version if needed")))}b.isMDXComponent=!0}}]);